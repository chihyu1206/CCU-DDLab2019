#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_01065AF8 .scope module, "tb" "tb" 2 4;
 .timescale -9 -12;
v010BB2E8_0 .var "addr", 15 0;
v010BBB28 .array "ans", 63 0, 15 0;
v010BBBD8_0 .net "bsy", 0 0, v010BAA80_0; 1 drivers
v010BB130_0 .var "clk", 0 0;
v010BB918_0 .var "ctrl", 1 0;
v010BB188_0 .var "din", 15 0;
v010BB340_0 .net "dout", 15 0, v0107D2F0_0; 1 drivers
v010BB708_0 .var/i "i", 31 0;
v010BB398 .array "mem1", 35 0, 15 0;
v010BB970 .array "mem2", 35 0, 15 0;
v010BB448_0 .var "rst", 0 0;
S_010655A8 .scope module, "fir" "fir" 2 29, 3 7, S_01065AF8;
 .timescale -9 -12;
v010BB5A8_0 .net "RW1", 0 0, v010BADF0_0; 1 drivers
v010BB238_0 .net "RW2", 0 0, v010BAD40_0; 1 drivers
v010BB7B8_0 .net *"_s3", 5 0, L_010BB4F8; 1 drivers
v010BB760_0 .net "acc", 35 0, v010844B8_0; 1 drivers
v010BB550_0 .net "acc_en", 0 0, v010BAEA0_0; 1 drivers
v010BBB80_0 .net "addr", 15 0, v010BB2E8_0; 1 drivers
v010BB600_0 .alias "bsy", 0 0, v010BBBD8_0;
v010BB290_0 .net "cidx", 3 0, v010BA920_0; 1 drivers
v010BB1E0_0 .net "clk", 0 0, v010BB130_0; 1 drivers
v010BB810_0 .net "coef", 15 0, v010BAC90_0; 1 drivers
v010BB3F0_0 .net "ctrl", 1 0, v010BB918_0; 1 drivers
v010BB658_0 .net "di", 15 0, v01071B78_0; 1 drivers
v010BB9C8_0 .net "didx1", 5 0, v010BB058_0; 1 drivers
v010BBA78_0 .net "didx2", 5 0, v010BAB30_0; 1 drivers
v010BB868_0 .net "din", 15 0, v010BB188_0; 1 drivers
v010BBA20_0 .alias "dout", 15 0, v010BB340_0;
v010BBAD0_0 .net "douta", 15 0, v010BA978_0; 1 drivers
v010BB8C0_0 .net "prod", 31 0, v008EAD30_0; 1 drivers
v010BB6B0_0 .net "rst", 0 0, v010BB448_0; 1 drivers
L_010BB4A0 .functor MUXZ 16, v010BB188_0, v010BA978_0, v010BAA80_0, C4<>;
L_010BB4F8 .part v010BB2E8_0, 2, 6;
L_010BBC88 .functor MUXZ 6, L_010BB4F8, v010BAB30_0, v010BAA80_0, C4<>;
S_010651F0 .scope module, "ctrl_m" "sysctrl" 3 24, 4 1, S_010655A8;
 .timescale -9 -12;
P_008E82AC .param/l "Calculate" 5 2, +C4<01>;
P_008E82C0 .param/l "Depth" 5 3, +C4<0100101>;
P_008E82D4 .param/l "Idle" 5 1, +C4<0>;
v010BAEF8_0 .var "CS", 0 0;
v010BACE8_0 .var "NS", 0 0;
v010BADF0_0 .var "RW1", 0 0;
v010BAD40_0 .var "RW2", 0 0;
v010BAD98_0 .alias "acc", 35 0, v010BB760_0;
v010BAEA0_0 .var "acc_en", 0 0;
v010BAA80_0 .var "bsy", 0 0;
v010BA920_0 .var "cidx", 3 0;
v010BAF50_0 .alias "clk", 0 0, v010BB1E0_0;
v010BAFA8_0 .var "cnt_en", 0 0;
v010BB000_0 .var "counter", 3 0;
v010BAAD8_0 .alias "ctrl", 1 0, v010BB3F0_0;
v010BB058_0 .var "didx1", 5 0;
v010BAB30_0 .var "didx2", 5 0;
v010BA978_0 .var "douta", 15 0;
v010BA9D0_0 .alias "rst", 0 0, v010BB6B0_0;
E_01087640/0 .event negedge, v010BA9D0_0;
E_01087640/1 .event posedge, v008EAE98_0;
E_01087640 .event/or E_01087640/0, E_01087640/1;
E_01087580 .event edge, v010BAEF8_0, v010BAB30_0, v010BB000_0;
E_010876E0 .event edge, v010BAEF8_0, v010BAAD8_0, v010BAB30_0;
S_010657C8 .scope module, "coef_m" "crom" 3 39, 6 1, S_010655A8;
 .timescale -9 -12;
P_008EC8EC .param/l "coefficent00" 6 6, C4<0000000000000001>;
P_008EC900 .param/l "coefficent01" 6 7, C4<0000000000000010>;
P_008EC914 .param/l "coefficent02" 6 8, C4<0000000000000011>;
P_008EC928 .param/l "coefficent03" 6 9, C4<0000000000000100>;
P_008EC93C .param/l "coefficent04" 6 10, C4<0000000000000101>;
P_008EC950 .param/l "coefficent05" 6 11, C4<0000000000000000>;
P_008EC964 .param/l "coefficent06" 6 12, C4<0000000000000000>;
P_008EC978 .param/l "coefficent07" 6 13, C4<0000000000000000>;
P_008EC98C .param/l "coefficent08" 6 14, C4<0000000000000000>;
P_008EC9A0 .param/l "coefficent09" 6 15, C4<0000000000000000>;
P_008EC9B4 .param/l "coefficent10" 6 16, C4<0000000000000000>;
P_008EC9C8 .param/l "coefficent11" 6 17, C4<0000000000000000>;
P_008EC9DC .param/l "coefficent12" 6 18, C4<0000000000000000>;
P_008EC9F0 .param/l "coefficent13" 6 19, C4<0000000000000000>;
P_008ECA04 .param/l "coefficent14" 6 20, C4<0000000000000000>;
P_008ECA18 .param/l "coefficent15" 6 21, C4<0000000000000000>;
v010BAB88_0 .alias "cidx", 3 0, v010BB290_0;
v010BABE0_0 .alias "clk", 0 0, v010BB1E0_0;
v010BAC90_0 .var "coef", 15 0;
S_01065388 .scope module, "buff_in" "dbuf" 3 45, 7 1, S_010655A8;
 .timescale -9 -12;
v01085E38_0 .alias "RW", 0 0, v010BB5A8_0;
v01085E90_0 .alias "clk", 0 0, v010BB1E0_0;
v0107D2F0_0 .var "di", 15 0;
v010BAE48_0 .net "didx", 5 0, L_010BBC88; 1 drivers
v010BAC38_0 .net "din", 15 0, L_010BB4A0; 1 drivers
v010BAA28 .array "mem", 63 0, 15 0;
S_010650E0 .scope module, "buff_m" "dbuf" 3 53, 7 1, S_010655A8;
 .timescale -9 -12;
v008E4888_0 .alias "RW", 0 0, v010BB238_0;
v008E48E0_0 .alias "clk", 0 0, v010BB1E0_0;
v01071B78_0 .var "di", 15 0;
v01071BD0_0 .alias "didx", 5 0, v010BB9C8_0;
v01071C28_0 .alias "din", 15 0, v010BB340_0;
v01085DE0 .array "mem", 63 0, 15 0;
S_01065B80 .scope module, "mult_m" "multi" 3 62, 8 1, S_010655A8;
 .timescale -9 -12;
v010888F8_0 .alias "clk", 0 0, v010BB1E0_0;
v0106E3B8_0 .alias "coef", 15 0, v010BB810_0;
v008EACD8_0 .alias "di", 15 0, v010BB658_0;
v008EAD30_0 .var "prod", 31 0;
S_01065410 .scope module, "acc_m" "accumulator" 3 69, 9 1, S_010655A8;
 .timescale -9 -12;
v010844B8_0 .var "acc", 35 0;
v01085F78_0 .alias "acc_en", 0 0, v010BB550_0;
v008EAE98_0 .alias "clk", 0 0, v010BB1E0_0;
v01071120_0 .alias "prod", 31 0, v010BB8C0_0;
E_010877E0 .event posedge, v008EAE98_0;
    .scope S_010651F0;
T_0 ;
    %wait E_01087640;
    %load/v 8, v010BA9D0_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_0.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v010BAEF8_0, 0, 0;
    %jmp T_0.1;
T_0.0 ;
    %load/v 8, v010BACE8_0, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v010BAEF8_0, 0, 8;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_010651F0;
T_1 ;
    %wait E_010876E0;
    %load/v 8, v010BAEF8_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/1 T_1.0, 6;
    %cmpi/u 8, 1, 1;
    %jmp/1 T_1.1, 6;
    %set/v v010BACE8_0, 0, 1;
    %jmp T_1.3;
T_1.0 ;
    %load/v 8, v010BAAD8_0, 1; Only need 1 of 2 bits
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_1.4, 8;
    %movi 8, 1, 2;
    %set/v v010BACE8_0, 8, 1;
    %jmp T_1.5;
T_1.4 ;
    %set/v v010BACE8_0, 0, 1;
T_1.5 ;
    %jmp T_1.3;
T_1.1 ;
    %load/v 8, v010BAB30_0, 6;
    %mov 14, 0, 2;
    %cmpi/u 8, 37, 8;
    %jmp/0xz  T_1.6, 4;
    %set/v v010BACE8_0, 0, 1;
    %jmp T_1.7;
T_1.6 ;
    %movi 8, 1, 2;
    %set/v v010BACE8_0, 8, 1;
T_1.7 ;
    %jmp T_1.3;
T_1.3 ;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_010651F0;
T_2 ;
    %wait E_01087580;
    %load/v 8, v010BAEF8_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/1 T_2.0, 6;
    %cmpi/u 8, 1, 1;
    %jmp/1 T_2.1, 6;
    %set/v v010BADF0_0, 0, 1;
    %set/v v010BAD40_0, 0, 1;
    %set/v v010BAEA0_0, 0, 1;
    %set/v v010BAFA8_0, 0, 1;
    %set/v v010BAA80_0, 0, 1;
    %jmp T_2.3;
T_2.0 ;
    %load/v 8, v010BAB30_0, 6;
    %inv 8, 6;
    %and/r 8, 8, 6;
    %set/v v010BADF0_0, 8, 1;
    %set/v v010BAD40_0, 0, 1;
    %set/v v010BAEA0_0, 0, 1;
    %set/v v010BAFA8_0, 0, 1;
    %set/v v010BAA80_0, 0, 1;
    %jmp T_2.3;
T_2.1 ;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_2.4, 4;
    %load/x1p 8, v010BB000_0, 1;
    %jmp T_2.5;
T_2.4 ;
    %mov 8, 2, 1;
T_2.5 ;
; Save base=8 wid=1 in lookaside.
    %inv 8, 1;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_2.6, 4;
    %load/x1p 9, v010BB000_0, 1;
    %jmp T_2.7;
T_2.6 ;
    %mov 9, 2, 1;
T_2.7 ;
; Save base=9 wid=1 in lookaside.
    %and 8, 9, 1;
    %load/v 9, v010BB000_0, 1; Only need 1 of 4 bits
; Save base=9 wid=1 in lookaside.
    %and 8, 9, 1;
    %set/v v010BADF0_0, 8, 1;
    %load/v 8, v010BB000_0, 4;
    %inv 8, 4;
    %and/r 8, 8, 4;
    %set/v v010BAD40_0, 8, 1;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_2.8, 4;
    %load/x1p 8, v010BB000_0, 1;
    %jmp T_2.9;
T_2.8 ;
    %mov 8, 2, 1;
T_2.9 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_2.10, 4;
    %load/x1p 9, v010BB000_0, 1;
    %jmp T_2.11;
T_2.10 ;
    %mov 9, 2, 1;
T_2.11 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %or 8, 9, 1;
    %load/v 9, v010BB000_0, 1; Only need 1 of 4 bits
; Save base=9 wid=1 in lookaside.
    %or 8, 9, 1;
    %set/v v010BAEA0_0, 8, 1;
    %set/v v010BAFA8_0, 1, 1;
    %set/v v010BAA80_0, 1, 1;
    %jmp T_2.3;
T_2.3 ;
    %jmp T_2;
    .thread T_2, $push;
    .scope S_010651F0;
T_3 ;
    %wait E_010877E0;
    %load/v 8, v010BAD98_0, 16; Only need 16 of 36 bits
; Save base=8 wid=16 in lookaside.
    %ix/load 0, 16, 0;
    %assign/v0 v010BA978_0, 0, 8;
    %jmp T_3;
    .thread T_3;
    .scope S_010651F0;
T_4 ;
    %wait E_01087640;
    %load/v 8, v010BA9D0_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_4.0, 8;
    %ix/load 0, 4, 0;
    %assign/v0 v010BB000_0, 0, 0;
    %jmp T_4.1;
T_4.0 ;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.2, 4;
    %load/x1p 8, v010BB000_0, 1;
    %jmp T_4.3;
T_4.2 ;
    %mov 8, 2, 1;
T_4.3 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.4, 4;
    %load/x1p 9, v010BAAD8_0, 1;
    %jmp T_4.5;
T_4.4 ;
    %mov 9, 2, 1;
T_4.5 ;
; Save base=9 wid=1 in lookaside.
    %or 8, 9, 1;
    %jmp/0xz  T_4.6, 8;
    %ix/load 0, 4, 0;
    %assign/v0 v010BB000_0, 0, 0;
    %jmp T_4.7;
T_4.6 ;
    %load/v 8, v010BAFA8_0, 1;
    %jmp/0xz  T_4.8, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v010BB000_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v010BB000_0, 0, 8;
T_4.8 ;
T_4.7 ;
T_4.1 ;
    %jmp T_4;
    .thread T_4;
    .scope S_010651F0;
T_5 ;
    %wait E_01087640;
    %load/v 8, v010BA9D0_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_5.0, 8;
    %ix/load 0, 6, 0;
    %assign/v0 v010BAB30_0, 0, 0;
    %jmp T_5.1;
T_5.0 ;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.2, 4;
    %load/x1p 8, v010BAAD8_0, 1;
    %jmp T_5.3;
T_5.2 ;
    %mov 8, 2, 1;
T_5.3 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_5.4, 8;
    %ix/load 0, 6, 0;
    %assign/v0 v010BAB30_0, 0, 0;
    %jmp T_5.5;
T_5.4 ;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.6, 4;
    %load/x1p 8, v010BB000_0, 1;
    %jmp T_5.7;
T_5.6 ;
    %mov 8, 2, 1;
T_5.7 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.8, 4;
    %load/x1p 9, v010BB000_0, 1;
    %jmp T_5.9;
T_5.8 ;
    %mov 9, 2, 1;
T_5.9 ;
; Save base=9 wid=1 in lookaside.
    %and 8, 9, 1;
    %load/v 9, v010BB000_0, 1; Only need 1 of 4 bits
; Save base=9 wid=1 in lookaside.
    %and 8, 9, 1;
    %jmp/0xz  T_5.10, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v010BAB30_0, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v010BAB30_0, 0, 8;
T_5.10 ;
T_5.5 ;
T_5.1 ;
    %jmp T_5;
    .thread T_5;
    .scope S_010651F0;
T_6 ;
    %wait E_01087640;
    %load/v 8, v010BA9D0_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_6.0, 8;
    %movi 8, 8, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v010BB058_0, 0, 8;
    %jmp T_6.1;
T_6.0 ;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.2, 4;
    %load/x1p 8, v010BB000_0, 1;
    %jmp T_6.3;
T_6.2 ;
    %mov 8, 2, 1;
T_6.3 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_6.4, 8;
    %load/v 8, v010BB058_0, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v010BB058_0, 0, 8;
    %jmp T_6.5;
T_6.4 ;
    %load/v 8, v010BB058_0, 6;
    %nor/r 8, 8, 6;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.6, 4;
    %load/x1p 9, v010BAAD8_0, 1;
    %jmp T_6.7;
T_6.6 ;
    %mov 9, 2, 1;
T_6.7 ;
; Save base=9 wid=1 in lookaside.
    %or 8, 9, 1;
    %jmp/0xz  T_6.8, 8;
    %movi 8, 8, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v010BB058_0, 0, 8;
    %jmp T_6.9;
T_6.8 ;
    %load/v 8, v010BB058_0, 6;
    %subi 8, 1, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v010BB058_0, 0, 8;
T_6.9 ;
T_6.5 ;
T_6.1 ;
    %jmp T_6;
    .thread T_6;
    .scope S_010651F0;
T_7 ;
    %wait E_01087640;
    %load/v 8, v010BA9D0_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_7.0, 8;
    %ix/load 0, 4, 0;
    %assign/v0 v010BA920_0, 0, 0;
    %jmp T_7.1;
T_7.0 ;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.2, 4;
    %load/x1p 8, v010BB000_0, 1;
    %jmp T_7.3;
T_7.2 ;
    %mov 8, 2, 1;
T_7.3 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.4, 4;
    %load/x1p 9, v010BAAD8_0, 1;
    %jmp T_7.5;
T_7.4 ;
    %mov 9, 2, 1;
T_7.5 ;
; Save base=9 wid=1 in lookaside.
    %or 8, 9, 1;
    %jmp/0xz  T_7.6, 8;
    %ix/load 0, 4, 0;
    %assign/v0 v010BA920_0, 0, 0;
    %jmp T_7.7;
T_7.6 ;
    %movi 8, 4, 4;
    %load/v 12, v010BB000_0, 4;
    %cmp/u 8, 12, 4;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v010BB000_0, 4;
   %cmpi/u 9, 7, 4;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_7.8, 8;
    %movi 8, 7, 4;
    %load/v 12, v010BB000_0, 4;
    %sub 8, 12, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v010BA920_0, 0, 8;
    %jmp T_7.9;
T_7.8 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v010BA920_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v010BA920_0, 0, 8;
T_7.9 ;
T_7.7 ;
T_7.1 ;
    %jmp T_7;
    .thread T_7;
    .scope S_010657C8;
T_8 ;
    %wait E_010877E0;
    %load/v 8, v010BAB88_0, 4;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_8.0, 6;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_8.1, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_8.2, 6;
    %cmpi/u 8, 3, 4;
    %jmp/1 T_8.3, 6;
    %cmpi/u 8, 4, 4;
    %jmp/1 T_8.4, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_8.5, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_8.6, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_8.7, 6;
    %cmpi/u 8, 8, 4;
    %jmp/1 T_8.8, 6;
    %cmpi/u 8, 9, 4;
    %jmp/1 T_8.9, 6;
    %cmpi/u 8, 10, 4;
    %jmp/1 T_8.10, 6;
    %cmpi/u 8, 11, 4;
    %jmp/1 T_8.11, 6;
    %cmpi/u 8, 12, 4;
    %jmp/1 T_8.12, 6;
    %cmpi/u 8, 13, 4;
    %jmp/1 T_8.13, 6;
    %cmpi/u 8, 14, 4;
    %jmp/1 T_8.14, 6;
    %cmpi/u 8, 15, 4;
    %jmp/1 T_8.15, 6;
    %jmp T_8.16;
T_8.0 ;
    %movi 8, 1, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 8;
    %jmp T_8.16;
T_8.1 ;
    %movi 8, 2, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 8;
    %jmp T_8.16;
T_8.2 ;
    %movi 8, 3, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 8;
    %jmp T_8.16;
T_8.3 ;
    %movi 8, 4, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 8;
    %jmp T_8.16;
T_8.4 ;
    %movi 8, 5, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 8;
    %jmp T_8.16;
T_8.5 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.6 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.7 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.8 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.9 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.10 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.11 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.12 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.13 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.14 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.15 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BAC90_0, 0, 0;
    %jmp T_8.16;
T_8.16 ;
    %jmp T_8;
    .thread T_8;
    .scope S_01065388;
T_9 ;
    %wait E_010877E0;
    %load/v 8, v01085E38_0, 1;
    %jmp/0xz  T_9.0, 8;
    %load/v 8, v010BAC38_0, 16;
    %ix/getv 3, v010BAE48_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 16, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v010BAA28, 0, 8;
t_0 ;
T_9.0 ;
    %load/v 8, v01085E38_0, 1;
    %jmp/0  T_9.2, 8;
    %load/v 9, v010BAC38_0, 16;
    %jmp/1  T_9.4, 8;
T_9.2 ; End of true expr.
    %ix/getv 3, v010BAE48_0;
    %load/av 25, v010BAA28, 16;
    %jmp/0  T_9.3, 8;
 ; End of false expr.
    %blend  9, 25, 16; Condition unknown.
    %jmp  T_9.4;
T_9.3 ;
    %mov 9, 25, 16; Return false value
T_9.4 ;
    %ix/load 0, 16, 0;
    %assign/v0 v0107D2F0_0, 0, 9;
    %jmp T_9;
    .thread T_9;
    .scope S_010650E0;
T_10 ;
    %wait E_010877E0;
    %load/v 8, v008E4888_0, 1;
    %jmp/0xz  T_10.0, 8;
    %load/v 8, v01071C28_0, 16;
    %ix/getv 3, v01071BD0_0;
    %jmp/1 t_1, 4;
    %ix/load 0, 16, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v01085DE0, 0, 8;
t_1 ;
T_10.0 ;
    %load/v 8, v008E4888_0, 1;
    %jmp/0  T_10.2, 8;
    %load/v 9, v01071C28_0, 16;
    %jmp/1  T_10.4, 8;
T_10.2 ; End of true expr.
    %ix/getv 3, v01071BD0_0;
    %load/av 25, v01085DE0, 16;
    %jmp/0  T_10.3, 8;
 ; End of false expr.
    %blend  9, 25, 16; Condition unknown.
    %jmp  T_10.4;
T_10.3 ;
    %mov 9, 25, 16; Return false value
T_10.4 ;
    %ix/load 0, 16, 0;
    %assign/v0 v01071B78_0, 0, 9;
    %jmp T_10;
    .thread T_10;
    .scope S_01065B80;
T_11 ;
    %wait E_010877E0;
    %load/v 8, v0106E3B8_0, 16;
    %movi 24, 0, 16;
    %load/v 40, v008EACD8_0, 16;
    %movi 56, 0, 16;
    %mul 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v008EAD30_0, 0, 8;
    %jmp T_11;
    .thread T_11;
    .scope S_01065410;
T_12 ;
    %wait E_010877E0;
    %load/v 8, v01071120_0, 32;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_12.0, 4;
    %load/x1p 48, v01071120_0, 1;
    %jmp T_12.1;
T_12.0 ;
    %mov 48, 2, 1;
T_12.1 ;
    %mov 44, 48, 1; Move signal select into place
    %mov 47, 44, 1; Repetition 4
    %mov 46, 44, 1; Repetition 3
    %mov 45, 44, 1; Repetition 2
    %mov 40, 44, 4;
    %load/v 44, v01085F78_0, 1;
    %jmp/0  T_12.2, 44;
    %load/v 45, v010844B8_0, 36;
    %jmp/1  T_12.4, 44;
T_12.2 ; End of true expr.
    %jmp/0  T_12.3, 44;
 ; End of false expr.
    %blend  45, 0, 36; Condition unknown.
    %jmp  T_12.4;
T_12.3 ;
    %mov 45, 0, 36; Return false value
T_12.4 ;
    %add 8, 45, 36;
    %ix/load 0, 36, 0;
    %assign/v0 v010844B8_0, 0, 8;
    %jmp T_12;
    .thread T_12;
    .scope S_01065AF8;
T_13 ;
    %set/v v010BB130_0, 0, 1;
T_13.0 ;
    %delay 10000, 0;
    %load/v 8, v010BB130_0, 1;
    %inv 8, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v010BB130_0, 0, 8;
    %jmp T_13.0;
    %end;
    .thread T_13;
    .scope S_01065AF8;
T_14 ;
    %vpi_call 2 25 "$dumpfile", "square_wave.fsdb";
    %vpi_call 2 26 "$dumpvars";
    %end;
    .thread T_14;
    .scope S_01065AF8;
T_15 ;
    %vpi_call 2 45 "$readmemb", "./databin3.mem", v010BB398;
    %vpi_call 2 46 "$readmemb", "./ans.mem", v010BB970;
    %end;
    .thread T_15;
    .scope S_01065AF8;
T_16 ;
    %ix/load 0, 16, 0;
    %assign/v0 v010BB2E8_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v010BB448_0, 0, 0;
    %delay 12000, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v010BB448_0, 0, 1;
    %delay 12000, 0;
    %movi 8, 2, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v010BB918_0, 0, 8;
    %wait E_010877E0;
    %ix/load 0, 2, 0;
    %assign/v0 v010BB918_0, 0, 0;
    %wait E_010877E0;
    %movi 8, 1, 32;
    %set/v v010BB708_0, 8, 32;
T_16.0 ;
    %load/v 8, v010BB708_0, 32;
   %cmpi/s 8, 37, 32;
    %jmp/0xz T_16.1, 5;
    %wait E_010877E0;
    %load/v 24, v010BB708_0, 32;
    %subi 24, 1, 32;
    %ix/get/s 3, 24, 32;
    %load/av 8, v010BB398, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v010BB188_0, 0, 8;
    %load/v 8, v010BB708_0, 16;
    %muli 8, 4, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v010BB2E8_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v010BB708_0, 32;
    %set/v v010BB708_0, 8, 32;
    %jmp T_16.0;
T_16.1 ;
    %wait E_010877E0;
    %ix/load 3, 0, 0;
    %mov 4, 0, 1;
    %load/av 8, v010BB398, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v010BB188_0, 0, 8;
    %ix/load 0, 16, 0;
    %assign/v0 v010BB2E8_0, 0, 0;
    %vpi_call 2 74 "$display", "start run";
    %wait E_010877E0;
    %movi 8, 1, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v010BB918_0, 0, 8;
    %wait E_010877E0;
    %ix/load 0, 2, 0;
    %assign/v0 v010BB918_0, 0, 0;
    %vpi_call 2 81 "$display", "polling busy";
    %wait E_010877E0;
T_16.2 ;
    %load/v 8, v010BBBD8_0, 1;
    %jmp/0xz T_16.3, 8;
    %wait E_010877E0;
    %jmp T_16.2;
T_16.3 ;
    %vpi_call 2 88 "$display", "operation finish";
    %wait E_010877E0;
    %movi 8, 1, 32;
    %set/v v010BB708_0, 8, 32;
T_16.4 ;
    %load/v 8, v010BB708_0, 32;
   %cmpi/s 8, 37, 32;
    %jmp/0xz T_16.5, 5;
    %load/v 8, v010BB708_0, 16;
    %muli 8, 4, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v010BB2E8_0, 0, 8;
    %wait E_010877E0;
    %wait E_010877E0;
    %load/v 8, v010BB340_0, 16;
    %load/v 24, v010BB708_0, 32;
    %subi 24, 1, 32;
    %ix/get/s 3, 24, 32;
    %jmp/1 t_2, 4;
    %ix/load 0, 16, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v010BBB28, 0, 8;
t_2 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v010BB708_0, 32;
    %set/v v010BB708_0, 8, 32;
    %jmp T_16.4;
T_16.5 ;
    %wait E_010877E0;
    %set/v v010BB708_0, 0, 32;
T_16.6 ;
    %load/v 8, v010BB708_0, 32;
   %cmpi/s 8, 36, 32;
    %jmp/0xz T_16.7, 5;
    %ix/getv/s 3, v010BB708_0;
    %load/av 8, v010BB970, 16;
    %cmp/u 8, 2, 16;
    %mov 8, 6, 1;
    %ix/getv/s 3, v010BB708_0;
    %load/av 9, v010BBB28, 16;
    %cmp/u 9, 2, 16;
    %mov 9, 6, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_16.8, 8;
    %vpi_call 2 101 "$display", "========================";
    %vpi_call 2 102 "$display", "=      Correct[%02d]   =", v010BB708_0;
    %vpi_call 2 103 "$display", "========================";
    %vpi_call 2 104 "$display", "your answer:%d\012real answer:%d", &A<v010BBB28, v010BB708_0 >, &A<v010BB970, v010BB708_0 >;
    %jmp T_16.9;
T_16.8 ;
    %ix/getv/s 3, v010BB708_0;
    %load/av 9, v010BB970, 16;
    %ix/getv/s 3, v010BB708_0;
    %load/av 25, v010BBB28, 16;
    %xor 9, 25, 16;
    %or/r 9, 9, 16;
    %mov 8, 9, 1;
    %cmp/z 8, 1, 1;
    %jmp/1 T_16.10, 4;
    %cmp/z 8, 0, 1;
    %jmp/1 T_16.11, 4;
    %cmp/z 8, 2, 1;
    %jmp/1 T_16.12, 4;
    %jmp T_16.13;
T_16.10 ;
    %vpi_call 2 109 "$display", "========================";
    %vpi_call 2 110 "$display", "=        Wrong[%02d]   =", v010BB708_0;
    %vpi_call 2 111 "$display", "========================";
    %vpi_call 2 112 "$display", "your answer:%d\012real answer:%d", &A<v010BBB28, v010BB708_0 >, &A<v010BB970, v010BB708_0 >;
    %jmp T_16.13;
T_16.11 ;
    %vpi_call 2 115 "$display", "========================";
    %vpi_call 2 116 "$display", "=      Correct[%02d]   =", v010BB708_0;
    %vpi_call 2 117 "$display", "========================";
    %vpi_call 2 118 "$display", "your answer:%d\012real answer:%d", &A<v010BBB28, v010BB708_0 >, &A<v010BB970, v010BB708_0 >;
    %jmp T_16.13;
T_16.12 ;
    %vpi_call 2 121 "$display", "========================";
    %vpi_call 2 122 "$display", "=        Wrong[%02d]   =", v010BB708_0;
    %vpi_call 2 123 "$display", "========================";
    %vpi_call 2 124 "$display", "your answer:%d\012real answer:%d", &A<v010BBB28, v010BB708_0 >, &A<v010BB970, v010BB708_0 >;
    %jmp T_16.13;
T_16.13 ;
T_16.9 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v010BB708_0, 32;
    %set/v v010BB708_0, 8, 32;
    %jmp T_16.6;
T_16.7 ;
    %vpi_call 2 130 "$finish";
    %end;
    .thread T_16;
# The file index is used to find the file name in the following table.
:file_names 10;
    "N/A";
    "<interactive>";
    "tb.v";
    "./fir.v";
    "./sysctrl.v";
    "./Param.v";
    "./crom.v";
    "./dbuf.v";
    "./multi.v";
    "./accumulator.v";
